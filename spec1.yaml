openapi: 3.0.3

info:
  title: EazyShop Products APIS definition
  description: |
    # About us
    **EazyShop** is a open market product selling company. Any website can list
    our products by using our _APIs_.
    Shipping & other logistics will be taken care by us. You will get an
    `Affiliate commission` for selling our products
    # Categories is supported
      - Mobiles
        - Samsung
        - OnePlus
        - Apple
      - Laptops
      - Televisions
      - Headphones
    Using this OpenAPI specification, any consumer can understand the APIs, provided by eazy shop market
  termsOfService: https://eazyshop.com/terms
  contact:
    name: EazyShop
    url: https://eazyshop.com/support
    email: example@email.com
  license:
    name: EazyShop License
    url: https://eazyshop.com/license
  version: 0.0.1
servers:
  - url: https://somerserver.com
    description: some description one
  - url: https://somerserver2.com
    description: some description two
  - url: https://somerserver3.com
    description: some description three
  - url: https://{username}.server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by service provider
      port:
        enum:
          - '8443'
          - '443'
        default: "8443"
      version:
        default: v1
paths:
  /categories:
    get:
      summary: list of all categories
      description: returns list of all categories returned by EazyShopAPI
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          required: true
          example: 101
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
  /categories/{id}:
    get:
      summary: signle category
      description: returns list of all categories returned by EazyShopAPI
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryId:
                    type: integer
                  name:
                    type: string
  /products:
    get:
      summary: returns products by some category
      description: returns list of profucts by category
      parameters:
        - name: categoryId
          in: query
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of products by some category
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryName:
                      type: string
                      example: Cell Phones
                    productId:
                      type: integer
                      example: 10
                    name:
                      type: string
                      example: 'Galaxy S23'
                    quantity:
                      type: integer
                      example: 23
                      description: |
                        ***Quantity*** represents `stock` value when
                        this field is being sent to EazyShop. Where
                        as in the scenarios of consumer sending this field, it represents
                        `number of product items` inside the order. Consumers are expected
                        to handle the scenario of stopping the end user <u>*when the stock is 0
                        *</u>
                    price:
                      type: number
                      example: 800
  /products/{id}:
    get:
      summary: detailed product page with specs
      description: product page with all characteristics and stats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          example: 1
      responses:
        '200':
          description: detailed information about product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 10
                  name:
                    type: string
                    example: "Galaxy S23"
                  images:
                    type: array
                    items:
                      type: string
                  price:
                    type: integer
                    example: 800
                  specification:
                    type: object
                    properties:
                      width:
                        type: number
                        example: 4.1
                      height:
                        type: number
                        example: 5.9
                      ppi:
                        type: integer
                        example: 450
                      displayResolution:
                        type: string
                        example: QHD
  /orders:
    post:
      summary: Create order
      description: |
        Post order details to EazyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
    put:
      summary: Update order
      description: |
        Update order details to EazyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '200':
          description: Order details updated successfuly
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
    delete:
      summary: Delete order
      description: Delete order details from EazyShop
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order details updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integerweq2eq
    get:
      summary: get order
      description: get order details from EazyShop
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Fetch order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                    type: object
                    properties:
                      addressLine:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      zipcode:
                        type: string
