openapi: 3.0.3

info:
  title: EazyShop Products APIS definition
  description: |
    # About us
    **EazyShop** is a open market product selling company. Any website can list
    our products by using our _APIs_.
    Shipping & other logistics will be taken care by us. You will get an
    `Affiliate commission` for selling our products
    # Categories is supported
      - Mobiles
        - Samsung
        - OnePlus
        - Apple
      - Laptops
      - Televisions
      - Headphones
    Using this OpenAPI specification, any consumer can understand the APIs, provided by eazy shop market
  termsOfService: https://eazyshop.com/terms
  contact:
    name: EazyShop
    url: https://eazyshop.com/support
    email: example@email.com
  license:
    name: EazyShop License
    url: https://eazyshop.com/license
  version: 0.0.1
servers:
  - url: https://somerserver.com
    description: some description one
  - url: https://somerserver2.com
    description: some description two
  - url: https://somerserver3.com
    description: some description three
  - url: https://{username}.server.com:{port}/{version}
    variables:
      username:
        default: demo
        description: This value is assigned by service provider
      port:
        enum:
          - '8443'
          - '443'
        default: "8443"
      version:
        default: v1
tags:
  - name: Categories
    description: categories related operations
  - name: Products
    description: Products-related operations
  - name: Orders
    description: Orders-related operations
paths:
  /categories:
    get:
      tags:
        - Categories
      summary: list of all categories
      description: returns list of all categories returned by EazyShopAPI
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          required: true
          examples:
            mobiles:
              summary: Use this example for mobiles
              value: 101
            laptops:
              summary: Use this example for laptops
              value: 102
            headphones:
              summary: Use this example for headphones
              value: 103
            televisions:
              summary: Use this examples for televisions
              value: 104
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple IPhone 13 pro
                      price: 999.0
                      categoryName: Mobiles
                      quantity: 96
                    - productId: 102
                      name: Samsung s23 Ultra
                      price: 899.0
                      categoryName: Mobiles
                      quantity: 121
                    - productId: 103
                      name: OnePlus 10 Pro 5G
                      price: 750.0
                      categoryName: Mobiles
                      quantity: 67
        '500':
          $ref: "#/components/responses/InternalServerError"
  /categories/{id}:
    get:
      tags:
        - Categories
      summary: single category
      description: returns list of all categories returned by EazyShopAPI
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products:
    get:
      tags:
        - Products
      summary: returns products by some category
      description: returns list of profucts by category
      parameters:
        - name: categoryId
          in: query
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses:
        '200':
          description: A list of products by some category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /products/{id}:
    get:
      tags:
        - Products
      summary: detailed product page with specs
      description: product page with all characteristics and stats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          example: 1
      responses:
        '200':
          description: detailed information about product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 10
                  name:
                    type: string
                    example: "Galaxy S23"
                  images:
                    type: array
                    items:
                      type: string
                  price:
                    type: integer
                    example: 800
                  specification:
                    type: object
                    properties:
                      width:
                        type: number
                        example: 4.1
                      height:
                        type: number
                        example: 5.9
                      ppi:
                        type: integer
                        example: 450
                      displayResolution:
                        type: string
                        example: QHD
        '500':
          $ref: "#/components/responses/InternalServerError"
  /orders:
    post:
      tags:
        - Orders
      summary: Create order
      description: |
        Post order details to EazyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
        '500':
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Orders
      summary: Update order
      description: |
        Update order details to EazyShop for processing and shipping
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    $ref: "#/components/schemas/Product"
                address:
                  $ref: "#/components/schemas/Address"
      responses:
        '200':
          description: Order details updated successfuly
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
        '500':
          $ref: "#/components/responses/InternalServerError"
    delete:
      tags:
        - Orders
      summary: Delete order
      description: Delete order details from EazyShop
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '204':
          description: Order details cancelled successfully
        '500':
          $ref: "#/components/responses/InternalServerError"
    get:
      tags:
        - Orders
      summary: get order
      description: get order details from EazyShop
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
      responses:
        '200':
          description: Fetch order details successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  address:
                    $ref: "#/components/schemas/Address"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /oneOfOrder:
    post:
      tags:
        - Orders
      summary: Insert OneOf the Order Details
      description: Insert OneOf the order details into eazyshop
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: object
                  oneOf:
                    - $ref: "#/components/schemas/Mobile"
                    - $ref: "#/components/schemas/Laptop"
                address:
                  $ref: "#/components/schemas/Address"
              required:
                - products
                - address
      responses:
        '200':
          description: Order placed successfully
  /anyOfOrder:
    get:
      tags:
        - Orders
      summary: Get Order details
      description: Get order details based on Order ID
      parameters:
        - $ref: "#/components/parameters/orderIdQueryParam"
        - name: fetchType
          in: query
          required: true
          schema:
            type: string
            enum:
              - summary
              - details
          description: >
            Fetch type:
            * `summary` - Will provide Order Summary
            * `details` - Will provide Order Summary & Order Address
      responses:
        '200':
          description: Returns products details
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/OrderSummary"
                  - $ref: "#/components/schemas/OrderAddress"
components:
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      schema:
        type: integer
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
          enum:
            - California
            - Texas
            - Indiana
            - NewYork
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      required: [addressLine, city, state, zipcode]
    Product:
      type: object
      properties:
        categoryName:
          type: string
          example: Cell Phones
          nullable: true
        productId:
          type: integer
          example: 10
        name:
          type: string
          example: 'Galaxy S23'
        releaseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          example: 23
          description: |
            ***Quantity*** represents `stock` value when
            this field is being sent to EazyShop. Where
            as in the scenarios of consumer sending this field, it represents
            `number of product items` inside the order. Consumers are expected
            to handle the scenario of stopping the end user <u>*when the stock is 0
            *</u>
        price:
          type: number
          example: 800
    Category:
      type: object
      properties:
        categoryId:
          type: integer
        name:
          type: string
    Mobile:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            networkType:
              type: string
              enum:
                - 4G
                - 5G
          required: [networkType]
    Laptop:
      allOf:
        - $ref: "#/components/schemas/Product"
        - type: object
          properties:
            ram:
              type: string
              enum:
                - 8GB
                - 16GB
                - 32GB
          required: [ram]
    OrderSummary:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    OrderAddress:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
  responses:
    InternalServerError:
      description: |
        An error occurred while processing the request.
        Please contact support@eazyshop.com
